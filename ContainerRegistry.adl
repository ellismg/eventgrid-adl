// https://github.com/Azure/azure-rest-api-specs/blob/93e71ddc610824711d52b364103d7bea18ddb1d6/specification/eventgrid/data-plane/Microsoft.ContainerRegistry/stable/2018-01-01/ContainerRegistry.json

// @eventType("Microsoft.ContainerRegistry.ImagePushed")
model ContainerRegistryImagePushedEventData = ContainerRegistryEventData;

// @eventType("Microsoft.ContainerRegistry.ImageDeleted")
model ContainerRegistryImageDeletedEventData = ContainerRegistryEventData;

// @eventType("Microsoft.ContainerRegistry.ChartPushed")
model ContainerRegistryChartPushedEventData = ContainerRegistryArtifactEventData;

// @eventType("Microsoft.ContainerRegistry.ChartDeleted")
model ContainerRegistryChartDeletedEventData = ContainerRegistryArtifactEventData;

model CommonContainerRegistryEventData {
    @doc("The event ID.")
    id: string,
    @doc("The time at which the event occurred.")
    timestamp: zonedDateTime,
    @doc("The action that encompasses the provided event")
    action: string,
}

model ContainerRegistryEventData {
    ...CommonContainerRegistryEventData,
    @doc("The target of the event.")
    target: ContainerRegistryEventTarget,
    @doc("The request that generated the event.")
    request: ContainerRegistryEventRequest,
    @doc("The agent that initiated the event. For most situations, this could be from the authorization context of the request.")
    actor: ContainerRegistryEventActor,
    @doc("The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.")
    source: ContainerRegistryEventSource,
}

model ContainerRegistryArtifactEventData {
    ...CommonContainerRegistryEventData,
    @doc("The target of the event.")
    target: ContainerRegistryArtifactEventTarget

}

model ContainerRegistryEventTarget {
    @doc("The MIME type of the referenced object.")
    mediaType: string,
    @doc("The number of bytes of the content. Same as length field.")
    size: int64,
    @doc("The digest of the content, as defined by the Registry V2 HTTP API Specification")
    digiest: string,
    @doc("The number of bytes of the content. Same as size field.")
    length: int64,
    @doc("The repository name.")
    repository: string,
    @doc("The direct URL to the content.")
    url: string,
    @doc("The tag name.")
    tag: string,
}

model ContainerRegistryArtifactEventTarget {
    @doc("The MIME type of the referenced object.")
    mediaType: string,
    @doc("The size in bytes of the artifact.")
    size: int64,
    @doc("The digest of the artifact.")
    digest: string,
    @doc("The repository name of the artifact.")
    repository: string,
    @doc("The repository name.")
    repository: string,
    @doc("The tag of the artifact.")
    tag: string,
    @doc("The name of the artifact.")
    name: string,
    @doc("The version of the artifact.")
    version: string,
}

model ContainerRegistryEventRequest {
    @doc("ID of the request that initiated the event.")
    id: string,
    @doc("The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.")
    addr: string,
    @doc("The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.")
    host: string,
    @doc("The request method that generated the event.")    
    method: string,
    @doc("The user agent header of the request.")
    useragent: string,
}

model ContainerRegistryEventActor {
    @doc("The subject or username associated with the request context that generated the event.")
    name: string
}

model ContainerRegistryEventSource {
    @doc("The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.")
    addr: string,
    @doc("The running instance of an application. Changes after each restart.")
    instanceID: string,
}